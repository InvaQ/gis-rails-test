name: Deploy to Production

concurrency: production

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build-and-publish-images:
    name: Build and Publish Docker Images
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: "master"

      - name: Pull master.key
        run: |-
          echo "${{ secrets.MASTER_KEY }}" > config/credentials/production.key

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0
      - run: |-
          gcloud --quiet auth configure-docker

      - name: "Build and push docker image"
        run: |-
          docker build -f Dockerfile -t gis_api/base --build-arg ENVI="production" --build-arg BUILD_CLOUDSQL_INSTANCES="invaq_gis_test:us-central1:invaq-c-data-1-mvp" .
          docker push us.gcr.io/invaq_gis_test/gis_api/api:latest

  migrate:
    name: Run Migrations
    runs-on: ubuntu-latest
    needs: build-and-publish-images
    env:
      BUNDLE_WITHOUT: "development test"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.3.0"
          bundler-cache: true

      - name: Install Libraries
        run: |-
          sudo apt-get -yqq install libpq-dev

      - name: Pull master.key
        run: |-
          echo "${{ secrets.MASTER_KEY }}" > config/credentials/production.key

      - name: Migrate DB
        env:
          DB_HOST_CI_OVERRIDE: 127.0.0.1
          RAILS_ENV: production
        run: |-
          bin/rails db:migrate

  deploy-api:
    name: Deploy api
    runs-on: ubuntu-latest
    needs: migrate

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: master

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: 'Deploy to App Engine'
        uses: 'google-github-actions/deploy-appengine@v0'
        with:
          deliverables: 'app.yaml'
          image_url: 'us.gcr.io/invaq_gis_test/gis_api/api:latest'



  cleanup-old-images:
    name: Cleanup Old Images
    runs-on: ubuntu-latest
    needs: deploy-api

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Cleanup Old Images
        run: |-
          gcloud container images list-tags us.gcr.io/invaq_gis_test/gis_api/api --filter='-tags:*' --format='get(digest)' --limit=unlimited | xargs -I {arg} gcloud container images delete  "us.gcr.io/invaq_gis_test/gis_api/api@{arg}" --quiet

  cleanup-old-versions:
    name: Cleanup Old Versions
    runs-on: ubuntu-latest
    needs: deploy-api

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
      - name: Setup GCloud
        uses: google-github-actions/setup-gcloud@v0

      - name: Cleanup Old Images
        run: |-
          gcloud app versions list --format="value(version.id)" --sort-by="~version.createTime" | tail -n +6 | xargs -r gcloud app versions delete --quiet

  add-a-tag-to-commit:
    name: Set a Tag and bumps it's version.
    runs-on: ubuntu-latest
    needs: deploy-api
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

